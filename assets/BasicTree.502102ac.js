var e=Object.assign;import{k as t,y as n,z as s,f as a,bo as c,bp as r,d,b as l,r as i,s as o,bG as y,a1 as u,a4 as p,a6 as f,c2 as K,cu as h,n as b}from"./index.a1da5219.js";import{u as k}from"./useContextMenu.6cc8bd3d.js";import{u as g}from"./useExpose.4342ccc1.js";import"./index.a45b2b74.js";import"./index.673364b0.js";import"./index.8d91dadc.js";var x={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"}}]},name:"down",theme:"outlined"};function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var v=function(e,a){var c=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?Object(arguments[t]):{},s=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(s=s.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),s.forEach((function(t){m(e,t,n[t])}))}return e}({},e,a.attrs);return t(s,n(c,{icon:x}),null)};v.displayName="DownOutlined",v.inheritAttrs=!1;var j=d({name:"BasicTree",props:{replaceFields:{type:Object},treeData:{type:Array},actionList:{type:Array,default:()=>[]},expandedKeys:{type:Array,default:()=>[]},selectedKeys:{type:Array,default:()=>[]},checkedKeys:{type:Array,default:()=>[]},beforeRightClick:{type:Function,default:null},rightMenuList:{type:Array}},emits:["update:expandedKeys","update:selectedKeys","update:value","get"],setup(s,{attrs:d,slots:x,emit:m}){const j=l({expandedKeys:s.expandedKeys||[],selectedKeys:s.selectedKeys||[],checkedKeys:s.checkedKeys||[]}),B=i([]),[N]=k(),O=o((()=>{const{replaceFields:t}=s;return e({children:"children",title:"title",key:"key"},t)})),w=o((()=>{const{actionList:e}=s;return{width:`calc(100% - ${18*e.length}px)`}})),L=o((()=>{let t=e(e(e({blockNode:!0},d),s),{expandedKeys:j.expandedKeys,selectedKeys:j.selectedKeys,checkedKeys:j.checkedKeys,replaceFields:a(O),"onUpdate:expandedKeys":e=>{j.expandedKeys=e,m("update:expandedKeys",e)},"onUpdate:selectedKeys":e=>{j.selectedKeys=e,m("update:selectedKeys",e)},onCheck:e=>{j.checkedKeys=e,m("update:value",e)},onRightClick:P});return t=y(t,"treeData"),t})),A=o((()=>a(B))),{deleteNodeByKey:C,insertNodeByKey:_,filterByLevel:D,updateNodeByKey:E}=function(t,n){return{deleteNodeByKey:function e(s,c){if(!s)return;const r=c||a(t),{key:d,children:l}=a(n);if(l&&d)for(let t=0;t<r.length;t++){const n=r[t],a=n[l];if(n[d]===s){r.splice(t,1);break}a&&a.length&&e(s,n[l])}},insertNodeByKey:function({parentKey:e=null,node:s,push:d="push"}){const l=c(a(t));if(!e)return l[d](s),void(t.value=l);const{key:i,children:o}=a(n);o&&i&&(r(l,(t=>{t[i]===e&&(t[o]=t[o]||[],t[o][d](s))})),t.value=l)},filterByLevel:function e(s=1,c,r=1){if(!s)return[];const d=[],l=c||a(t)||[];for(let t=0;t<l.length;t++){const c=l[t],{key:i,children:o}=a(n),y=i?c[i]:"",u=o?c[o]:[];d.push(y),u&&u.length&&r<s&&(r+=1,d.push(...e(s,u,r)))}return d},updateNodeByKey:function s(c,r,d){if(!c)return;const l=d||a(t),{key:i,children:o}=a(n);if(o&&i)for(let t=0;t<l.length;t++){const n=l[t],a=n[o];if(n[i]===c){l[t]=e(e({},l[t]),r);break}a&&a.length&&s(c,r,n[o])}}}}(B,O);function F(e){const{actionList:n}=s;if(n&&0!==n.length)return n.map(((n,s)=>t("span",{key:s,class:"basic-tree__action"},[n.render(e)])))}function M({data:e}){return e?e.map((e=>{const{title:s,key:c,children:r}=a(O),d=y(e,"title"),l=e;return t(h.TreeNode,n(d,{key:null==l?void 0:l[c]}),{title:()=>t("span",{class:"basic-tree-title"},[t("span",{class:"basic-tree__content",style:a(w)},[s&&l[s]]),t("span",{class:"basic-tree__actions"},[b(" "),F(e)])]),default:()=>M({data:r?l[r]:[]})})})):null}async function P({event:e,node:t}){const{rightMenuList:n=[],beforeRightClick:a}=s;let c=[];c=a&&u(a)?await a(t):n,c.length&&N({event:e,items:c})}p((()=>{B.value=s.treeData,j.expandedKeys=s.expandedKeys,j.selectedKeys=s.selectedKeys,j.checkedKeys=s.checkedKeys}));const S={setExpandedKeys:function(e){j.expandedKeys=e},getExpandedKeys:function(){return j.expandedKeys},setSelectedKeys:function(e){j.selectedKeys=e},getSelectedKeys:function(){return j.selectedKeys},setCheckedKeys:function(e){j.checkedKeys=e},getCheckedKeys:function(){return j.checkedKeys},insertNodeByKey:_,deleteNodeByKey:C,updateNodeByKey:E,filterByLevel:e=>{j.expandedKeys=D(e)}};return g(S),f((()=>{m("get",S)})),()=>t(h,n(a(L),{class:"basic-tree"}),e({switcherIcon:()=>t(v,null,null),default:()=>M({data:a(A)})},K(x)))}});export default j;
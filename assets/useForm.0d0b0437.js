import{cY as l,r as c,bW as f,e as s,cZ as d,a_ as u,cT as y,E as h,da as F}from"./index.de7a3c72.js";function p(n){l();const r=c(null),o=c(!1);async function a(){const e=s(r);return e||y("The form instance has not been obtained, please make sure that the form has been rendered when performing the form operation!"),await h(),e}function m(e){f(()=>{r.value=null,o.value=null}),!(s(o)&&d()&&e===s(r))&&(r.value=e,o.value=!0,u(()=>{n&&e.setProps(F(n))}))}return[m,{scrollToField:async(e,t)=>{(await a()).scrollToField(e,t)},setProps:async e=>{(await a()).setProps(e)},updateSchema:async e=>{(await a()).updateSchema(e)},clearValidate:async e=>{(await a()).clearValidate(e)},resetFields:async()=>{a().then(async e=>{await e.resetFields()})},removeSchemaByFiled:async e=>{(await a()).removeSchemaByFiled(e)},getFieldsValue:()=>{var e;return(e=s(r))==null?void 0:e.getFieldsValue()},setFieldsValue:async e=>{(await a()).setFieldsValue(e)},appendSchemaByField:async(e,t,i)=>{(await a()).appendSchemaByField(e,t,i)},submit:async()=>(await a()).submit(),validate:async e=>(await a()).validate(e),validateFields:async e=>(await a()).validateFields(e)}]}export{p as u};

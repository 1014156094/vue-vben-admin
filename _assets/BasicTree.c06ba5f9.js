let e=document.createElement("style");e.innerHTML=".basic-tree{position:relative}.basic-tree-title{position:relative;display:inline-block;width:100%;padding-right:10px}.basic-tree-title:hover .basic-tree__action{visibility:visible}.basic-tree__content{display:inline-block;overflow:hidden}.basic-tree__actions{position:absolute;top:0;right:0;display:flex}.basic-tree__action{margin-left:4px;visibility:hidden}",document.head.appendChild(e);import{f as t,a1 as s,a2 as n,a as i,b as a,r as d,p as r,az as c,T as l,O as o}from"./index.a4c995c9.js";import"./xlsx.a48e520c.js";import"./Trigger.a445e86a.js";import{o as y}from"./omit.149aedfc.js";import"./_baseSlice.1123a25b.js";import"./index.2bdd82eb.js";import"./types.0700a3df.js";import"./index.a172b251.js";import"./index.d7919071.js";import"./index.3ae0f855.js";import"./index.73c71c16.js";import"./CaretDownFilled.65d9b2c0.js";import"./FileOutlined.b96b57d2.js";import{T as p}from"./index.bbd828f5.js";import{D as u}from"./DownOutlined.39a8d1c3.js";import{e as f}from"./tsxHelper.20d71045.js";import"./index.85a2c56f.js";import"./propTypes.7f710850.js";import{u as K}from"./useExpose.0faa79f6.js";import{u as h}from"./useContextMenu.8525f487.js";var m=i({name:"BasicTree",props:{replaceFields:{type:Object},treeData:{type:Array},actionList:{type:Array,default:()=>[]},expandedKeys:{type:Array,default:()=>[]},selectedKeys:{type:Array,default:()=>[]},checkedKeys:{type:Array,default:()=>[]},beforeRightClick:{type:Function,default:null},rightMenuList:{type:Array}},emits:["update:expandedKeys","update:selectedKeys","update:value"],setup(e,{attrs:i,slots:m,emit:b}){const x=a({expandedKeys:e.expandedKeys||[],selectedKeys:e.selectedKeys||[],checkedKeys:e.checkedKeys||[]}),k=d([]),[g]=h(),j=r((()=>{const{replaceFields:t}=e;return{children:"children",title:"title",key:"key",...t}})),v=r((()=>{const{actionList:t}=e;return{width:`calc(100% - ${18*t.length}px)`}})),_=r((()=>{let s={blockNode:!0,...i,...e,expandedKeys:x.expandedKeys,selectedKeys:x.selectedKeys,checkedKeys:x.checkedKeys,replaceFields:t(j),"onUpdate:expandedKeys":e=>{x.expandedKeys=e,b("update:expandedKeys",e)},"onUpdate:selectedKeys":e=>{x.selectedKeys=e,b("update:selectedKeys",e)},onCheck:e=>{x.checkedKeys=e,b("update:value",e)},onRightClick:A};return s=y(s,"treeData"),s})),B=r((()=>t(k))),{deleteNodeByKey:N,insertNodeByKey:C,filterByLevel:L,updateNodeByKey:w}=function(e,i){return{deleteNodeByKey:function s(n,a){if(!n)return;const d=a||t(e),{key:r,children:c}=t(i);if(c&&r)for(let e=0;e<d.length;e++){const t=d[e],i=t[c];if(t[r]===n){d.splice(e,1);break}i&&i.length&&s(n,t[c])}},insertNodeByKey:function({parentKey:a=null,node:d,push:r="push"}){const c=s(t(e));if(!a)return c[r](d),void(e.value=c);const{key:l,children:o}=t(i);o&&l&&(n(c,(e=>{e[l]===a&&(e[o]=e[o]||[],e[o][r](d))})),e.value=c)},filterByLevel:function s(n=1,a,d=1){if(!n)return[];const r=[],c=a||t(e)||[];for(let e=0;e<c.length;e++){const a=c[e],{key:l,children:o}=t(i),y=l?a[l]:"",p=o?a[o]:[];r.push(y),p&&p.length&&d<n&&(d+=1,r.push(...s(n,p,d)))}return r},updateNodeByKey:function s(n,a,d){if(!n)return;const r=d||t(e),{key:c,children:l}=t(i);if(l&&c)for(let e=0;e<r.length;e++){const t=r[e],i=t[l];if(t[c]===n){r[e]={...r[e],...a};break}i&&i.length&&s(n,a,t[l])}}}}(k,j);function T({data:s}){return s?s.map((s=>{const{title:n,key:i,children:a}=t(j),d=y(s,"title"),r=s;return o(p.TreeNode,{...d,key:null==r?void 0:r[i]},{title:()=>o("span",{class:"basic-tree-title"},o("span",{class:"basic-tree__content",style:t(v)},n&&r[n]),o("span",{class:"basic-tree__actions"}," ",function(t){const{actionList:s}=e;if(s&&0!==s.length)return s.map(((e,s)=>o("span",{key:s,class:"basic-tree__action"},e.render(t))))}(s))),default:()=>T({data:a?r[a]:[]})})})):null}async function A({event:t,node:s}){const{rightMenuList:n=[],beforeRightClick:i}=e;let a=[];a=i&&c(i)?await i(s):n,a.length&&g({event:t,items:a})}return l((()=>{k.value=e.treeData,x.expandedKeys=e.expandedKeys,x.selectedKeys=e.selectedKeys,x.checkedKeys=e.checkedKeys})),K({setExpandedKeys:function(e){x.expandedKeys=e},getExpandedKeys:function(){return x.expandedKeys},setSelectedKeys:function(e){x.selectedKeys=e},getSelectedKeys:function(){return x.selectedKeys},setCheckedKeys:function(e){x.checkedKeys=e},getCheckedKeys:function(){return x.checkedKeys},insertNodeByKey:C,deleteNodeByKey:N,updateNodeByKey:w,filterByLevel:e=>{x.expandedKeys=L(e)}}),()=>o(p,{...t(_),class:"basic-tree"},{switcherIcon:()=>o(u,null),default:()=>T({data:t(B)}),...f(m)})}});export default m;